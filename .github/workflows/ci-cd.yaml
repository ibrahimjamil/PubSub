name: PUBSUB CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Get Credentionals
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to AWS ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Create ECR repository for subscriber
        run: |
          aws ecr describe-repositories --repository-names subscriber || \
          aws ecr create-repository --repository-name subscriber
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Build Consumer Docker Image And Push To ECR
        run: |
          docker build \
            --build-arg AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }} \
            --build-arg AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }} \
            --build-arg SNS_TOPIC=${{ secrets.SNS_TOPIC }} \
            --build-arg SQS_URL=${{ secrets.SQS_URL }} \
            --build-arg AWS_REGION=${{ secrets.AWS_REGION }} \
            -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/subscriber:latest ./subscriber
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/subscriber:latest

      - name: Create ECR repository for producer
        run: |
          aws ecr describe-repositories --repository-names producer || \
          aws ecr create-repository --repository-name producer
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Build Producer Docker Image And Push To ECR
        run: |
          docker build \
            --build-arg AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }} \
            --build-arg AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }} \
            --build-arg SNS_TOPIC=${{ secrets.SNS_TOPIC }} \
            --build-arg SQS_URL=${{ secrets.SQS_URL }} \
            --build-arg AWS_REGION=${{ secrets.AWS_REGION }} \
            -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/producer:latest ./producer
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/producer:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Get AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install eksctl
        run: |
          # Define architecture and platform
          ARCH=amd64
          PLATFORM=$(uname -s)_$ARCH

          # Download eksctl
          curl -sLO "https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_$PLATFORM.tar.gz"

          # (Optional) Verify checksum
          curl -sL "https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_checksums.txt" | grep $PLATFORM | sha256sum --check

          # Extract and move eksctl
          tar -xzf eksctl_$PLATFORM.tar.gz -C /tmp
          sudo mv /tmp/eksctl /usr/local/bin

      - name: Install kubectl
        run: |
          curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.19.6/2021-01-05/bin/linux/amd64/kubectl
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin

      - name: Update kubeconfig for EKS cluster
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name pubsub-cluster

      - name: List directory contents
        run: |
          ls -R ./infra/

      - name: Deploy Producer to EKS
        run: |
          kubectl apply -k ./infra/
